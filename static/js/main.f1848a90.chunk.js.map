{"version":3,"sources":["ModelInfo.js","Sidebar.js","Group.js","Line.js","Constants.js","Canvas.js","Toolbar.js","ErrorBox.js","SelectModel.js","LinkPage.js","SetInput.js","Utils.js","Server.js","TrainSetup.js","App.js","index.js"],"names":["activationBoxHeight","activationBoxColor","nodeTypes","dense","name","type","svg","props","activationSVG","circles","Object","toConsumableArray","Array","map","_","i","react_default","a","createElement","cx","xSize","cy","key","r","fill","activation","Fragment","width","height","y","offsetX","offsetY","defaultParameters","units","canActivation","shapeOut","parameters","shapeIn","setError","concat","slice","length","conv","xInterval","yInterval","x","squareSize","filters","kernelSize","stride","batchSize","dimensions","kernel","isArray","mapped","dimension","Math","floor","input","data","datasetID","inputShape","modelInfo","Number","maxpool","poolSize","embedding","isNumber","dropout","color","len","rate","flatten","reduce","total","value","output","outputShape","relu","d","stroke","strokeWidth","sigmoid","tanh","softmax","layerNames","activationNames","blankModel","JSON","parse","convModel","denseModel","SidebarHeader","className","tabSelected","onClick","changeTab","CTAList","href","Button","disabled","children","Layer","newModel","Activation","newActivation","EditElements","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","propsOri","setActivation","bind","assertThisInitialized","selected","models","update","_this2","Collapsible_default","trigger","triggerTagName","id","triggerClassName","triggerOpenedClassName","onOpen","onClose","open","layersCollapsed","activationsCollapsed","React","Component","TrainElements","propOri","isTraining","trainingInfo","trainButton","cancelTrain","trainCloud","setSelectModelPage","getLink","downloadModel","setInput","ElementsContainer","propsExtracted","Elements","Sidebar_EditElements","Sidebar","_React$Component2","_this3","state","set","inherits","createClass","v","setState","tab","Group","_React$Component","onMouseDown","e","model","handleDrag","clientX","clientY","ID","transform","String","style","userSelect","MarkerDefs","viewBox","refX","refY","markerWidth","markerHeight","orient","Line","strokeDasharray","tentative","pointerEvents","midX","x1","x2","midY","y1","y2","markerStart","markerMid","markerEnd","BASE_URL","DATASET_SHAPE","MNIST","IMDB","modelCenter","Canvas","isNewline","xOffset","yOffset","selectedLineFromTo","dragging","initX","initY","initModelX","initModelY","handleElementClick","trackMouse","handleBGClick","handleLineClick","deleteSelection","onMouseUp","dim","ReactDOM","findDOMNode","getBoundingClientRect","document","addEventListener","removeEventListener","editableSelected","keyCode","cancelNewline","select","remove","from","to","connectedTo","newX","newY","dragged","abs","target","refs","canvas","startNewline","idFrom","idTo","modelElements","entries","_ref","_ref2","slicedToArray","Group_Group","tentativeLine","coords","lines","_ref3","_ref4","index","otherModel","otherCoords","onMouseMove","ref","Padding","CanvasContainer","Canvas_Canvas","DisplayLine","EditableLine","valueChanged","currentValue","onFocus","setEditableSelected","onChange","onBlur","callback","paraName","event","oldValue","DataInput","setInputDataset","Parameters","Toolbar_EditableLine","n","Toolbar","loss","accuracy","testAccuracy","progress","updateModelInfo","trainSetup","training","incomingShape","outgoingShape","ErrorBox","errorMsg","dismissible","data-dismiss","aria-label","aria-hidden","SelectModel","err","link","noChange","loadModel","toggle","display","loadDefaultModel","placeholder","LinkPage","dummy","body","appendChild","execCommand","removeChild","readOnly","SetInput","inputShapeDisplay","outputShapeDisplay","onChangeShapeInput","onChangeShapeOutput","onChangeName","onBlurInput","onBlurOutput","components","split","num","parseInt","isNaN","shape","join","breakShape","toString","loadDefaultInput","loadInput","isCyclic","visited","inRecursionStack","_i","_Object$keys","keys","_i2","_Object$keys2","isCyclicHelper","next","isLinear","numIncomingEdges","_i3","_Object$keys3","_i4","_Object$keys4","ok","_i5","_Object$keys5","isTrainable","resp","currentNode","saveModel","serializedModel","fetch","method","headers","Accept","Content-Type","then","response","status","json","Error","Option","displayName","TrainSetup","step","learningRate","parseFloat","getElementById","min","optimizer","App","0","_model","1","epochs","maxToken","nextID","errorOnce","modelID","sessionID","intervalID","selectModelPage","linkPage","settingInput","updateModel","selectModel","removeModel","startSession","updateTrain","_updateDependents","loadCustomInput","cloneDeep","random","inputNode","nextNode","oldModels","objectSpread","newModels","defineProperty","updateDependents","dict","canTuple","floatOkay","arguments","undefined","once","t","stringify","modelJSON","responseJSON","info","catch","message","setInterval","_this4","toFixed","clearInterval","_this5","getIDFromLink","getModel","decoded","max","apply","_this6","_this7","element","file","Blob","URL","createObjectURL","download","click","url","_this8","datasetName","console","log","_this9","LinkPage_LinkPage","SelectModel_SelectModel","SetInput_SetInput","TrainSetup_TrainSetup","ErrorBox_ErrorBox","Sidebar_Sidebar","Toolbar_Toolbar","updateParameters","render","src_App_0"],"mappings":"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","file":"static/js/main.f1848a90.chunk.js","sourcesContent":["import React from 'react';\r\nimport { isArray, isNumber } from 'util';\r\n\r\n// mega fuckton of constants to describe the svg\r\n// shapes of things\r\n\r\n\r\n// describe layers' and activation function's svg representation\r\nconst activationBoxHeight = 20;\r\nconst activationBoxColor = \"#cccccc\";\r\n\r\nfunction conv(props) {\r\n  // svg for a conv layer\r\n  const squareSize = 40;\r\n  const xInterval = squareSize / 4;\r\n  const yInterval = squareSize / 4;\r\n\r\n  const firstColor = \"#2775f4\";\r\n  const secondColor = \"#4286f4\";\r\n  const thirdColor = \"#5c98f9\";\r\n  let activationSVG;\r\n  if (props.activation != null) {\r\n    activationSVG = nodeTypes[props.activation].svg(xInterval*2+squareSize/2, yInterval*2+squareSize+activationBoxHeight/2+3);\r\n  } else {\r\n    activationSVG = null\r\n  }\r\n  return <React.Fragment>\r\n    <rect width={squareSize} height={squareSize} fill={firstColor}/>\r\n    <rect x={xInterval} y={yInterval} width={squareSize} height={squareSize} fill={secondColor}/>\r\n    <rect x={xInterval*2} y={yInterval*2} width={squareSize} height={squareSize} fill={thirdColor}/>\r\n    <rect x={xInterval*2} y={yInterval*2+squareSize} width={squareSize} height={activationBoxHeight} fill={activationBoxColor}/>\r\n    {activationSVG}\r\n  </React.Fragment>\r\n}\r\n\r\nfunction dense(props) {\r\n  // svg for a dense layer\r\n  const xSize = 40;\r\n  const ySize = 80;\r\n  const numCircles = 3;\r\n  const squareColor = \"#665cf9\";\r\n  \r\n  const circleColor = \"#83a5f7\";\r\n\r\n  const circles = [...Array(numCircles)].map((_, i) =>\r\n    <circle cx={xSize / 2} \r\n            cy={(ySize-8) / numCircles * (i+0.5)+4} \r\n            key={i}\r\n            r={ySize / numCircles / 2 - 4}\r\n            fill={circleColor}>\r\n            \r\n            </circle>\r\n  );\r\n  let activationSVG;\r\n  if (props.activation != null) {\r\n    activationSVG = nodeTypes[props.activation].svg(xSize/2, ySize+activationBoxHeight/2+3);\r\n  } else {\r\n    activationSVG = null\r\n  }\r\n  return <React.Fragment>\r\n    <rect width={xSize} height={ySize} fill={squareColor}/>\r\n    <rect width={xSize} y={ySize} height={activationBoxHeight} fill={activationBoxColor}/>\r\n    {circles}\r\n    {activationSVG}\r\n  </React.Fragment>\r\n}\r\n\r\nfunction input(props) {\r\n  // svg for an input layer\r\n  const size = 30\r\n  const color = \"#99ccff\";\r\n  return <React.Fragment>\r\n    <rect width={size} height={size} fill={color}/>\r\n  </React.Fragment>\r\n}\r\n\r\nfunction output(props) {\r\n  // svg for an output layer\r\n  const color = \"#008066\";\r\n  const width = 30;\r\n  const height = 60;\r\n\r\n  let activationSVG;\r\n  if (props.activation != null) {\r\n    activationSVG = nodeTypes[props.activation].svg(width/2, height+activationBoxHeight/2+3);\r\n  } else {\r\n    activationSVG = null\r\n  }\r\n\r\n  return <React.Fragment>\r\n    <rect width={width} height={height} fill={color}></rect>\r\n    <rect width={width} y={height} height={activationBoxHeight} fill={activationBoxColor}></rect>\r\n    {activationSVG}\r\n  </React.Fragment>\r\n}\r\n\r\nfunction maxpool(props) {\r\n  // svg for a maxpool layer\r\n  const squareSize = 30;\r\n  const xInterval = squareSize / 4;\r\n  const yInterval = squareSize / 4;\r\n\r\n  const firstColor = \"#be41f4\";\r\n  const secondColor = \"#e541f4\";\r\n  const thirdColor = \"#f95cf9\";\r\n\r\n  return <React.Fragment>\r\n    <rect width={squareSize} height={squareSize} fill={firstColor}/>\r\n    <rect x={xInterval} y={yInterval} width={squareSize} height={squareSize} fill={secondColor}/>\r\n    <rect x={xInterval*2} y={yInterval*2} width={squareSize} height={squareSize} fill={thirdColor}/>\r\n  </React.Fragment>\r\n}\r\n\r\nfunction embedding(props) {\r\n  // svg for an embedding layer\r\n  const width = 20;\r\n  const height = 15;\r\n  const firstColor = \"#6a41f4\";\r\n  const secondColor = \"#8a61ff\";\r\n  const thirdColor = \"#7a51f5\";\r\n  return <React.Fragment>\r\n    <rect width={width*3} height={height} fill={firstColor}></rect>\r\n    <rect width={width*1.5} height={height} y={height} fill={secondColor}></rect>\r\n    <rect width={width*2.5} height={height} y={height*2} fill={thirdColor}></rect>\r\n  </React.Fragment>\r\n}\r\n\r\nfunction dropout(props) {\r\n  // svg for a dropout layer\r\n  const len = 10;\r\n  const color = \"#404040\";\r\n  return <React.Fragment>\r\n    <rect width={len} height={len} x={len*0} y={len*0} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*2} y={len*0} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*3} y={len*0} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*1} y={len*1} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*2} y={len*1} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*0} y={len*2} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*2} y={len*2} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*3} y={len*2} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*1} y={len*3} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*2} y={len*3} fill={color}></rect>\r\n    <rect width={len} height={len} x={len*3} y={len*3} fill={color}></rect>\r\n  </React.Fragment>\r\n}\r\n\r\nfunction flatten(props) {\r\n  // svg for a flatten layer\r\n  const width = 16;\r\n  const height = 120;\r\n  const color = \"#404040\";\r\n  return <React.Fragment>\r\n    <rect width={width} height={height} fill={color}></rect>\r\n  </React.Fragment>\r\n}\r\n\r\nfunction relu(x, y) {\r\n  // svg for a relu function\r\n  const width = 12;\r\n  const height = 8;\r\n  return <React.Fragment>\r\n    <path d={\"M\"+(x-width)+\" \"+y+\"l\"+width+ \" 0 l\" + width + \" -\" + height} stroke=\"black\" strokeWidth=\"2\" fill=\"none\"/>\r\n  </React.Fragment>\r\n}\r\n\r\nfunction sigmoid(x, y) {\r\n  // svg for a sigmoid function\r\n  const width = 12;\r\n  const height = 4;\r\n  return (\r\n    <path d={\"M \"+(x-width)+\" \"+y+\" q \"+(width-1)+ \" 0 \" + width + \" \" + (-height) + \" q 1 \" + (-height) + \" \" + width + \" \" + (-height)} stroke=\"black\" strokeWidth=\"2\" fill=\"none\"/>\r\n  )\r\n}\r\n\r\nfunction softmax(x, y) {\r\n  // svg for a softmax function\r\n  const width = 24;\r\n  const height = 8;\r\n  return (\r\n    <path d={\"M \"+(x-width/2)+\" \"+y+\" q \"+(width-1)+ \" 0 \" + width + \" \" + (-height)} stroke=\"black\" strokeWidth=\"2\" fill=\"none\"/>\r\n  )\r\n}\r\n\r\nfunction tanh(x, y) {\r\n  // svg for a tanh function\r\n  const width = 12;\r\n  const height = 4;\r\n  return (\r\n    <path d={\"M \"+(x-width)+\" \"+y+\" q \"+(width-5)+ \" 0 \" + width + \" \" + (-height) + \" q 5 \" + (-height) + \" \" + width + \" \" + (-height)} stroke=\"black\" strokeWidth=\"2\" fill=\"none\"/>\r\n  )\r\n}\r\n\r\n// this is a mapping from node type (layer or activation)\r\n// to its relevant constant information\r\n\r\n// name is its display name\r\n// type can be layer or activation\r\n// svg is its corresponding svg to be rendered\r\n// defaultParameters include its default parameters\r\n// canActivation indicates whether a layer can have an activation function\r\n// shapeOut is a functio nto calculate its output shape given its parameter and input shape\r\n\r\n// offsetX and offsetY for finding the center of the svg (from its corner)\r\n\r\nexport const nodeTypes = {\r\n    \"dense\": {\r\n        name: \"Dense\",\r\n        type: \"layer\",\r\n        svg: dense,\r\n        offsetX: 20, // offsets are for giving a point of contact for lines\r\n        offsetY: 50, \r\n        defaultParameters: {\r\n          units: 16,\r\n        },\r\n        canActivation: true,\r\n        // the function to compute the output shape given input shape and parameters\r\n        shapeOut: (parameters, shapeIn, setError) => {\r\n          if (shapeIn === null) {\r\n            return null;\r\n          }\r\n          return [...shapeIn.slice(0,shapeIn.length-1), parameters[\"units\"]];\r\n        },\r\n    },\r\n    \"conv\": {\r\n        name: \"Conv\",\r\n        type: \"layer\",\r\n        svg: conv,\r\n        offsetX: 40,\r\n        offsetY: 40,\r\n        defaultParameters: {\r\n          filters: 8,\r\n          kernelSize: [3,3], // could be both tuple or int. ndim needs to match with stride\r\n          stride: 1, // could be both tuple or int\r\n        },\r\n        canActivation: true,\r\n        shapeOut: (parameters, shapeIn, setError) => {\r\n          if (shapeIn === null) {\r\n            return null;\r\n          }\r\n          const batchSize = shapeIn[0];\r\n          const dimensions = shapeIn.slice(1, shapeIn.length-1);\r\n          const kernel = isArray(parameters[\"kernelSize\"]) ? parameters[\"kernelSize\"] : [parameters[\"kernelSize\"]];\r\n          \r\n          const stride = (typeof(parameters[\"stride\"]) === \"number\") ? Array(kernel.length).fill(parameters['stride']) : parameters[\"stride\"];\r\n          const filters = parameters[\"filters\"];\r\n          if (dimensions.length !== kernel.length) {\r\n            setError(\"Kernel must have the same ndim as the input dimension (without batchSize)\", false);\r\n            return null;\r\n          }\r\n          const mapped = dimensions.map((dimension, key) => {\r\n            return Math.floor((dimension - kernel[key])/stride[key])+1;\r\n          });\r\n          return [batchSize, ...mapped, filters];\r\n        },\r\n    },\r\n    \"input\": {\r\n      name: \"Input\",\r\n      type: \"layer\",\r\n      svg: input,\r\n      offsetX: 15,\r\n      offsetY: 15,\r\n      defaultParameters: {\r\n        data: \"MNIST\",\r\n        datasetID: \"\",\r\n        inputShape: [28, 28, 1],\r\n      },\r\n      canActivation: false,\r\n      shapeOut: (parameters, modelInfo, setError) => {\r\n        if (parameters['inputShape'] === null) {\r\n          return null;\r\n        }\r\n        if (isArray(parameters['inputShape'])) {\r\n          return [Number(modelInfo[\"batchSize\"]), ...parameters['inputShape']];\r\n        }\r\n        return [Number(modelInfo[\"batchSize\"]), parameters['inputShape']];\r\n      },\r\n    },\r\n    \"maxpool\": {\r\n      name: \"Max Pool\",\r\n      type: \"layer\",\r\n      svg: maxpool,\r\n      offsetX: 30,\r\n      offsetY: 30,\r\n      defaultParameters: {\r\n        poolSize: [2,2], // the length is dimensionality; can be between 1 to 3\r\n      },\r\n      canActivation: false,\r\n      shapeOut: (parameters, shapeIn, setError) => {\r\n        if (shapeIn === null) {\r\n          return null;\r\n        }\r\n        const batchSize = shapeIn[0];\r\n        const dimensions = shapeIn.slice(1,shapeIn.length-1);\r\n        const filters = shapeIn[shapeIn.length-1];\r\n        const poolSize = (typeof(parameters[\"poolSize\"]) === \"number\") ? [parameters[\"poolSize\"]] : parameters[\"poolSize\"];\r\n        \r\n        if (dimensions.length !== poolSize.length) {\r\n          setError(\"PoolSize must have the same ndim as the input dimension (without batchSize)\", false);\r\n          return null;\r\n        }\r\n        const mapped = dimensions.map((dimension, key) => {\r\n          return Math.floor((dimension)/poolSize[key]);\r\n        });\r\n        return [batchSize, ...mapped, filters];\r\n      }\r\n    },\r\n    \"embedding\": {\r\n      name: \"Embedding\",\r\n      type: \"layer\",\r\n      svg: embedding,\r\n      offsetX: 25,\r\n      offsetY: 20,\r\n      defaultParameters: {\r\n        units: 100,\r\n      },\r\n      canActivation: false,\r\n      shapeOut: (parameters, shapeIn, setError) => {\r\n        if (shapeIn === null) {\r\n          return null;\r\n        }\r\n        if (isNumber(shapeIn) || shapeIn.length !== 2) {\r\n          setError(\"Embedding input shape must be (batchSize, sequenceLength)\", false);\r\n          return null;\r\n        }\r\n        return [shapeIn[0], shapeIn[1], parameters['units']];\r\n      },\r\n    },\r\n    \"dropout\": {\r\n      name: \"Dropout\",\r\n      type: \"layer\",\r\n      svg: dropout,\r\n      offsetX: 20,\r\n      offsetY: 20,\r\n      defaultParameters: {\r\n        rate: 0.25,\r\n      },\r\n      canActivation: false,\r\n      shapeOut: (parameters, shapeIn, setError) => {\r\n        if (shapeIn === null) {\r\n          return null;\r\n        }\r\n        return shapeIn;\r\n      }\r\n    },\r\n    \"flatten\": {\r\n      name: \"Flatten\",\r\n      type: \"layer\",\r\n      svg: flatten,\r\n      offsetX: 8,\r\n      offsetY: 60,\r\n      defaultParameters: {},\r\n      canActivation: false,\r\n      shapeOut: (parameters, shapeIn, setError) => {\r\n        if (shapeIn === null) {\r\n          return null;\r\n        }\r\n        if (isNumber(shapeIn) || shapeIn.length <= 2) {\r\n          setError(\"Flatten input shape must be (batchSize, ...shape) (ndim > 2)\", false);\r\n          return null;\r\n        }\r\n        return [shapeIn[0], shapeIn.slice(1).reduce((total, value) => total*value)];\r\n      }\r\n    },\r\n    \"output\": {\r\n      name: \"Output\",\r\n      type: \"layer\",\r\n      svg: output,\r\n      offsetX: 10,\r\n      offsetY: 40,\r\n      defaultParameters: {\r\n        data: \"MNIST\",\r\n        outputShape: [10],\r\n      },\r\n      canActivation: true,\r\n      shapeOut: (parameters, shapeIn, setError) => {\r\n        if (shapeIn === null) {\r\n          return null;\r\n        }\r\n        if (isNumber(shapeIn) || shapeIn.length !== 2) {\r\n          setError(\"Output layer must have input layer of shape (batchSize, dim)\", false);\r\n        }\r\n        if (isArray(parameters['outputShape'])) {\r\n          return [...shapeIn.slice(0,shapeIn.length-1), ...parameters['outputShape']];\r\n        } else {\r\n          return [...shapeIn.slice(0,shapeIn.length-1), parameters['outputShape']];\r\n        }\r\n        \r\n      },\r\n    },\r\n    \"relu\": {\r\n      name: \"ReLU\",\r\n      type: \"activation\",\r\n      svg: relu,\r\n      defaultParameters: {}\r\n    },\r\n    \"sigmoid\": {\r\n      name: \"Sigmoid\",\r\n      type: \"activation\",\r\n      svg: sigmoid,\r\n      defaultParameters: {}\r\n    },\r\n    \"tanh\": {\r\n      name: \"Tanh\",\r\n      type: \"activation\",\r\n      svg: tanh,\r\n      defaultParameters: {}\r\n    },\r\n    \"softmax\": {\r\n      name: \"SoftMax\",\r\n      type: \"activation\",\r\n      svg: softmax,\r\n      defaultParameters: {}\r\n    }\r\n};\r\n\r\n// some more constants\r\nexport const layerNames = [\"dense\", \"conv\", \"maxpool\", \"flatten\", \"embedding\", \"dropout\"];\r\nexport const activationNames = [\"relu\", \"sigmoid\", \"softmax\", \"tanh\"];\r\n\r\n// preset models\r\n\r\nexport const blankModel = JSON.parse('{\"0\":{\"name\":\"input0\",\"ID\":0,\"type\":\"input\",\"x\":20,\"y\":50,\"connectedTo\":null,\"shapeIn\":null,\"shapeOut\":[25,28,28,1],\"activation\":null,\"parameters\":{\"data\":\"MNIST\",\"batchSize\":25, \"inputShape\":[28,28,1]}},\"1\":{\"name\":\"output1\",\"ID\":1,\"type\":\"output\",\"x\":299,\"y\":50,\"connectedTo\":null,\"shapeIn\":[25,16],\"shapeOut\":[25,10],\"activation\":\"sigmoid\",\"parameters\":{\"data\":\"MNIST\", \"outputShape\":[10]}}}');\r\n\r\nexport const convModel = JSON.parse('{\"0\":{\"name\":\"input0\",\"ID\":0,\"type\":\"input\",\"x\":20,\"y\":50,\"connectedTo\":2,\"shapeIn\":null,\"shapeOut\":[25,28,28,1],\"activation\":null,\"parameters\":{\"data\":\"MNIST\",\"batchSize\":25, \"inputShape\":[28,28,1]}},\"1\":{\"name\":\"output1\",\"ID\":1,\"type\":\"output\",\"x\":299,\"y\":50,\"connectedTo\":null,\"shapeIn\":[25,16],\"shapeOut\":[25,10],\"activation\":\"sigmoid\",\"parameters\":{\"data\":\"MNIST\", \"outputShape\":[10]}},\"2\":{\"name\":\"conv2\",\"ID\":2,\"type\":\"conv\",\"x\":74.28643321494462,\"y\":46.87875586829372,\"connectedTo\":3,\"shapeIn\":[25,28,28,1],\"shapeOut\":[25,25,25,8],\"activation\":\"relu\",\"parameters\":{\"filters\":8,\"kernelSize\":[3,3],\"stride\":1}},\"3\":{\"name\":\"maxpool3\",\"ID\":3,\"type\":\"maxpool\",\"x\":153.58841744957806,\"y\":55.21242239191861,\"connectedTo\":4,\"shapeIn\":[25,25,25,8],\"shapeOut\":[25,12,12,8],\"activation\":null,\"parameters\":{\"poolSize\":[2,2]}},\"4\":{\"name\":\"dense4\",\"ID\":4,\"type\":\"dense\",\"x\":219.28041809853335,\"y\":37.307656195514426,\"connectedTo\":1,\"shapeIn\":[25,12,12,8],\"shapeOut\":[25,16],\"activation\":\"relu\",\"parameters\":{\"units\":16}}}');\r\n\r\nexport const denseModel = JSON.parse('{\"0\":{\"name\":\"input0\",\"ID\":0,\"type\":\"input\",\"x\":20,\"y\":50,\"connectedTo\":3,\"shapeIn\":null,\"shapeOut\":[25,28,28,1],\"activation\":null,\"parameters\":{\"data\":\"MNIST\",\"batchSize\":25}},\"1\":{\"name\":\"output1\",\"ID\":1,\"type\":\"output\",\"x\":299,\"y\":50,\"connectedTo\":null,\"shapeIn\":[25,16],\"shapeOut\":[25,10],\"activation\":\"sigmoid\",\"parameters\":{\"data\":\"MNIST\"}},\"2\":{\"name\":\"dense2\",\"ID\":2,\"type\":\"dense\",\"x\":191.61521311914112,\"y\":41.56822923585631,\"connectedTo\":1,\"shapeIn\":[25,16],\"shapeOut\":[25,16],\"activation\":\"relu\",\"parameters\":{\"units\":16}},\"3\":{\"name\":\"dense3\",\"ID\":3,\"type\":\"dense\",\"x\":107.9840483926111,\"y\":39.51253484832063,\"connectedTo\":2,\"shapeIn\":[25,28,28,1],\"shapeOut\":[25,16],\"activation\":\"relu\",\"parameters\":{\"units\":16}}}');","import React from 'react';\r\nimport Collapsible from 'react-collapsible';\r\nimport \"./Sidebar.css\";\r\nimport {nodeTypes, layerNames, activationNames} from \"./ModelInfo.js\";\r\n\r\nfunction SidebarHeader(props) {\r\n  /* the header (top left corner) of the sidebar */\r\n  const selectedClassName = \"btn btn-dark btn-block\";\r\n  const unselectedClassName = \"btn btn-outline-dark btn-block\";\r\n  return (\r\n    <div className=\"sidebar-header\">\r\n        <button type=\"button\" \r\n                className={props.tabSelected === \"edit\" ? selectedClassName : unselectedClassName }\r\n                onClick={() => props.changeTab(\"edit\")}>\r\n                Edit\r\n        </button>\r\n        <button type=\"button\" \r\n                className={props.tabSelected === \"train\" ? selectedClassName : unselectedClassName}\r\n                onClick={() => props.changeTab(\"train\")}>\r\n                Train\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CTAList() {\r\n  /* the credits on the bottom left corner */\r\n  return (\r\n    <ul className=\"list-unstyled CTAs\">\r\n      <li>\r\n        <a href=\"https://www.github.com/alexding123/NN-Flowchart\" className=\"download\">Download source</a>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nfunction Button(props) {\r\n  /* a button to be displayed on the sidebar */\r\n  return (\r\n    <div className=\"p-2 align-self-stretch button-container\">\r\n      <button className=\"btn btn-sm btn-dark btn-block\" onClick={props.onClick} disabled={props.disabled}>\r\n        {props.children}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Layer(props) {\r\n  /* returns a button to create a layer */\r\n  return (\r\n    <Button onClick={() => props.newModel(props.name)}>\r\n      {nodeTypes[props.name].name}\r\n    </Button>\r\n  )\r\n}\r\n\r\nfunction Activation(props) {\r\n  /* returns a button to append an activation */\r\n  return (\r\n    <Button onClick={() => props.newActivation(props.name)}>\r\n      {nodeTypes[props.name].name}\r\n    </Button>\r\n  );\r\n}\r\n\r\nclass EditElements extends React.Component {\r\n  /* the sidebar when it's under the edit bar */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.propsOri = props.propsOri;\r\n    this.setActivation = this.setActivation.bind(this);\r\n  }\r\n\r\n  setActivation(name) {\r\n    /* set the selected model to a particular activation function */\r\n    // must have a layer selected\r\n    if (this.props.selected === -1) {\r\n      this.props.setError(\"Select a layer to add the activation to first!\", true);\r\n      return;\r\n    }\r\n    const selected = this.props.models[this.props.selected];\r\n\r\n    // cancel activation if model is not activation-capatible\r\n    if (!nodeTypes[selected.type].canActivation) {\r\n      return;\r\n    }\r\n    // cancel the existing activation if it's the same as this\r\n    if (selected.activation === name) {\r\n      this.props.update(this.props.selected, {\r\n        activation: null,\r\n      });\r\n    } else {\r\n      this.props.update(this.props.selected, {\r\n        activation: name,\r\n      });\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const triggerName = \"trigger\";\r\n    const triggerOpenName = \"trigger active\";\r\n    return <React.Fragment>\r\n      <Collapsible trigger=\"Layers\" triggerTagName=\"p\" id=\"layers-toggle\" triggerClassName={triggerName} triggerOpenedClassName={triggerOpenName} onOpen={() => this.propsOri.update(\"layers\", false)} onClose={() => this.propsOri.update(\"layers\", true)} open={!this.propsOri.layersCollapsed}>\r\n        <div className=\"d-flex flex-column\">\r\n        { layerNames.map((name) => \r\n          <Layer key={name}\r\n            name={name}\r\n            newModel={this.props.newModel}\r\n          />)\r\n        }\r\n        </div>\r\n      </Collapsible>\r\n      <Collapsible trigger=\"Activations\" triggerTagName=\"p\" triggerClassName={triggerName} triggerOpenedClassName={triggerOpenName} onOpen={() => this.propsOri.update(\"activations\", false)} onClose={() => this.propsOri.update(\"activations\", true)} open={!this.propsOri.activationsCollapsed}>\r\n      <div className=\"d-flex flex-column\">\r\n      { activationNames.map((name) => \r\n        <Activation key={name} \r\n          name={name} \r\n          newActivation={() => this.setActivation(name)}\r\n        />\r\n        )\r\n      }\r\n      </div>\r\n      </Collapsible>\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nfunction TrainElements(propOri) {\r\n  /* the display of the sidebar when it is under the train tab */\r\n  const props = propOri.props;\r\n  const isTraining = props.trainingInfo[\"training\"];\r\n\r\n  // train if not training, cancel button if training\r\n  const trainButton = (!isTraining) ? \r\n                 <Button onClick={props.trainCloud}>Train on Cloud</Button> : \r\n                 <Button onClick={props.cancelTrain}>Cancel</Button>;\r\n  return (\r\n    <React.Fragment>\r\n      <p>Server</p>\r\n      <Button onClick={props.setSelectModelPage} disabled={isTraining}>New/Load</Button>\r\n      <Button onClick={props.getLink}>Generate Link</Button>\r\n      \r\n      <p>Model</p>\r\n      {trainButton}\r\n      <Button onClick={props.downloadModel}>Download Model</Button>\r\n\r\n      <p>Input</p>\r\n      <Button onClick={props.setInput}>Set Input</Button>\r\n      \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nfunction ElementsContainer(props) {\r\n  /* the container of a list of buttons */\r\n  const propsExtracted = props.props;\r\n  const Elements = props.tabSelected === \"edit\" ? <EditElements propsOri={props} models={propsExtracted.models} selected={propsExtracted.selected} setError={propsExtracted.setError} newModel={propsExtracted.newModel} update={propsExtracted.update}/>: <TrainElements props={propsExtracted}/>;\r\n  return (\r\n    <ul className=\"list-unstyled components\">\r\n      {Elements}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport class Sidebar extends React.Component {\r\n  /* the master sidebar to the left */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props\r\n    this.state = {\r\n      tabSelected: \"edit\", // which tab is selected\r\n      layersCollapsed: false, // whether the accordion tab is collapsed\r\n      activationsCollapsed: false,\r\n    };\r\n    this.changeTab = this.changeTab.bind(this);\r\n    this.set = this.set.bind(this);\r\n  }\r\n\r\n  set(name, v) {\r\n    /* set whether the tab is collapsed */\r\n    if (name === \"layers\") {\r\n      this.setState({layersCollapsed: v});\r\n    } else if (name === \"activations\") {\r\n      this.setState({activationsCollapsed: v});\r\n    }\r\n  }\r\n\r\n  changeTab(tab) {\r\n    /* updates the current tab selected */\r\n    this.setState({\r\n      tabSelected: tab\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"p-2 h-100\" id=\"sidebar\">\r\n        <SidebarHeader tabSelected={this.state.tabSelected} changeTab={this.changeTab} />\r\n        <ElementsContainer tabSelected={this.state.tabSelected} layersCollapsed={this.state.layersCollapsed} activationsCollapsed={this.state.activationsCollapsed} update={this.set} props={this.props}/>\r\n        <CTAList />\r\n      \r\n      </nav>\r\n    )\r\n  }\r\n  \r\n}","import React from 'react';\r\nimport {nodeTypes} from \"./ModelInfo.js\";\r\n\r\nexport class Group extends React.Component {\r\n  /* a class for one single model's svg */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n  }\r\n  \r\n  \r\n  onMouseDown(e) {\r\n    /* start a drag-n-drop when clicked */\r\n    const model = this.props.model;\r\n    this.props.handleDrag(e.clientX, e.clientY, model.ID);\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const model = this.props.model;\r\n\r\n    return (\r\n      <g className={this.props.selected ? \"selected\" : \"\"}\r\n        onMouseDown={this.onMouseDown}\r\n        key={model.ID} \r\n        transform={\"translate(\" + String(model.x) + \",\" + String(model.y) + \")\"}\r\n        style={{userSelect: 'none'}} // to prevent selecting\r\n      >\r\n      {nodeTypes[model.type].svg(model)}\r\n      </g>\r\n    )\r\n  }\r\n  \r\n}","import React from 'react';\r\n\r\nexport function MarkerDefs(props) {\r\n  /* defines the marker for the lines drawn in the svg */\r\n  // arrowed line\r\n  return (\r\n    <defs>\r\n      <marker id=\"dot\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\"\r\n        markerWidth=\"5\" markerHeight=\"5\">\r\n        <circle cx=\"5\" cy=\"5\" r=\"3\" fill=\"black\" />\r\n      </marker>\r\n      <marker id=\"arrow\" markerWidth=\"4\" markerHeight=\"4\"\r\n      orient=\"auto\" refY=\"2\">\r\n        <path d=\"M0,0 L4,2 0,4\"/>\r\n      </marker>\r\n    </defs>\r\n  )\r\n  }\r\n  \r\nexport function Line(props) {\r\n  /* defines an actual svg line, with arrows and dotted\r\n   * if selected\r\n   */\r\n    const strokeDasharray = props.tentative ? \"5,5\" : null;\r\n    const className = props.selected ? \"selected\" : null;\r\n    const onClick = props.tentative ? null : props.onClick;\r\n    let pointerEvents = props.tentative ? \"none\" : null;\r\n    if (\"pointerEvents\" in props) {\r\n      pointerEvents = props.pointerEvents;\r\n    }\r\n    const midX = (props.x1+props.x2) / 2;\r\n    const midY = (props.y1+props.y2) / 2;\r\n    return (\r\n    <path d={\"M \"+props.x1+\" \"+props.y1+\r\n             \" L \"+midX+\" \"+midY+\r\n             \" L \"+props.x2+\" \"+props.y2}\r\n          onClick={onClick}\r\n          className={className}\r\n          pointerEvents={pointerEvents}\r\n          strokeDasharray={strokeDasharray} \r\n          stroke=\"black\" \r\n          strokeWidth=\"3\"\r\n          markerStart=\"url(#arrow)\"\r\n          markerMid=\"url(#arrow)\"\r\n          markerEnd=\"url(#dot)\"/>\r\n    );\r\n  }\r\n  ","export const DELETE_KEY = 8; // keycode\r\nexport const BASE_URL = \"http://localhost:5000/api/\";\r\n\r\nexport const DATASET_SHAPE = {\r\n    \"MNIST\": {\r\n        \"input\": [28, 28, 1],\r\n        \"output\": [10],\r\n    },\r\n    \"IMDB\": {\r\n        \"input\": [500],\r\n        \"output\": [2],\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./Canvas.css\";\r\nimport {nodeTypes} from \"./ModelInfo.js\";\r\nimport {Group} from \"./Group.js\";\r\nimport {MarkerDefs, Line} from \"./Line.js\";\r\nimport {DELETE_KEY} from \"./Constants.js\";\r\n\r\n\r\nfunction modelCenter(model) {\r\n  /* get coordinates for the point on a model to connect to\r\n   */\r\n  const offsetX = nodeTypes[model.type].offsetX\r\n  const offsetY = nodeTypes[model.type].offsetY\r\n  return {x: model.x+offsetX, y: model.y+offsetY}\r\n}\r\n\r\nclass Canvas extends React.Component {\r\n  /* the class implementing the actual svg and all the event\r\n   * listerers (along with its downstream elements)\r\n   * stores the mouse locations and such information to implement\r\n   * drag and drop\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    \r\n    this.state = {\r\n      isNewline: false, // is there a new line being constructed?\r\n      xOffset: 0, // offset of the svg's x from clientX\r\n      yOffset: 0, // ibid for y\r\n      x: 0, // x of the mouse relative to the svg\r\n      y: 0, // ibid for y\r\n      id: -1, // id of the line from which the current new line stems from\r\n      selectedLineFromTo: [-1,-1], // selected line from node X to node Y ([X,Y])\r\n      dragging: -1, // -1 means no dragging\r\n      initX: 0,\r\n      initY: 0,\r\n      initModelX: 0,\r\n      initModelY: 0,\r\n    }\r\n\r\n    // some function bindings\r\n    this.handleElementClick = this.handleElementClick.bind(this);\r\n    this.trackMouse = this.trackMouse.bind(this);\r\n    this.handleBGClick = this.handleBGClick.bind(this);\r\n    this.handleLineClick = this.handleLineClick.bind(this);\r\n    this.deleteSelection = this.deleteSelection.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // finds out the offsets of the svg\r\n    const dim = ReactDOM.findDOMNode(this).getBoundingClientRect();\r\n    this.setState({\r\n      xOffset: dim.x,\r\n      yOffset: dim.y,\r\n    });\r\n\r\n    // setup key listener for deletion\r\n    document.addEventListener(\"keydown\", this.deleteSelection);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // reset\r\n    document.removeEventListener(\"keydown\", this.deleteSelection);\r\n  }\r\n\r\n  deleteSelection(e) {\r\n    /* delete the selected model */\r\n    // ignore delete if editing a parameter\r\n    if (this.props.editableSelected) {\r\n      return;\r\n    }\r\n    if (e.keyCode === DELETE_KEY) {\r\n      // prioritize items over line\r\n      // if an item is selected\r\n      if (this.props.selected !== -1) {\r\n        // first cancel a few things just in case (to prevent errors)\r\n        this.cancelNewline();\r\n        const selected = this.props.selected;\r\n        \r\n        // cannot delete input or output node\r\n        if (selected === 0 || selected === 1) {\r\n          return;\r\n        }\r\n        this.props.select(-1);\r\n\r\n        this.props.remove(selected);\r\n        return;\r\n      }\r\n\r\n      // delete selected line\r\n      const from = this.state.selectedLineFromTo[0];\r\n      const to = this.state.selectedLineFromTo[1];\r\n      if (from !== -1 || to !== -1) {\r\n        this.cancelNewline();\r\n        this.props.update(from, {\r\n          connectedTo: null,\r\n        });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  startNewline(id) {\r\n    /* starts the construction of a tentative new line */\r\n\r\n    this.setState( {\r\n      isNewline: true,\r\n      id: id,\r\n      selectedLineFromTo: [-1, -1], // reset line selection\r\n    });\r\n  }\r\n\r\n  cancelNewline() {\r\n    /* cancels the tentative new line */\r\n    this.setState({\r\n      isNewline: false,\r\n      id: -1,\r\n      selectedLineFromTo: [-1, -1], // reset line selection\r\n    })\r\n  }\r\n\r\n  trackMouse(e) {\r\n    /* a helper function to keep tracking mouse movement */\r\n    this.setState({\r\n      x: e.clientX - this.state.xOffset,\r\n      y: e.clientY - this.state.yOffset,\r\n    });\r\n\r\n    if (this.state.dragging !== -1) {\r\n      const newX = e.clientX + this.state.initModelX - this.state.initX;\r\n      const newY = e.clientY + this.state.initModelY - this.state.initY;\r\n      this.props.update(this.state.dragging, {\r\n        x: newX,\r\n        y: newY,\r\n      });\r\n    }\r\n  }\r\n\r\n  onMouseUp(e) {\r\n    /* when the click is released, stop the drag-n-drop\r\n     * and decide if it's an actual click\r\n     */\r\n    \r\n    if (this.state.dragging === -1) {\r\n      return;\r\n    }\r\n    const dragging = this.state.dragging;\r\n    const dragged = this.props.models[dragging];\r\n\r\n    // reset drag\r\n    this.setState({\r\n      dragging: -1,\r\n    });\r\n    \r\n    const threshold = 10;\r\n    // if movement is small enough, consider it a click\r\n    if (Math.abs(dragged.x - this.state.initModelX) + Math.abs(dragged.y - this.state.initModelY) < threshold) {\r\n      this.props.select(dragged.ID);\r\n      this.handleElementClick(dragged.ID);\r\n    }\r\n  }\r\n\r\n  handleBGClick(e) {\r\n    /* handles a click on the background */\r\n    if (e.target === this.refs.canvas) {\r\n      this.props.select(-1); // deselect elements\r\n      this.cancelNewline();\r\n      return;\r\n    }\r\n    // the rest is handled on handleElementClick\r\n  }\r\n\r\n  handleElementClick(id) {\r\n    /* handles a click to one of the elemnts, to be passed\r\n     * to the child classes of the canvas\r\n     */\r\n    // if this is a new line, clicked on another object\r\n    if (this.state.isNewline) {\r\n\r\n      // if the line is drawn to itself, ignore\r\n      if (this.state.id !== id) {\r\n        // update model so that new connection is made\r\n        this.props.update(this.state.id, {\r\n          connectedTo: id,\r\n        });\r\n        \r\n        // if the reverse connection exists, cancel it\r\n        if (this.props.models[id].connectedTo === this.state.id) {\r\n          this.props.update(id, {\r\n            connectedTo: null,\r\n          })\r\n        }\r\n      }\r\n      // remove temporary line\r\n      this.cancelNewline();\r\n      return;\r\n    }\r\n    // if no current line, start one\r\n    this.startNewline(id);\r\n  }\r\n\r\n  handleLineClick(idFrom, idTo) {\r\n    /* handles a click on the line, to be passed\r\n     * to the child class\r\n     */\r\n    this.setState({\r\n      selectedLineFromTo: [idFrom, idTo]\r\n    })\r\n    this.props.select(-1);\r\n  }\r\n\r\n  handleDrag(initX, initY, id) {\r\n    /* handle a new dragging session */\r\n    const model = this.props.models[id];\r\n    this.setState({\r\n      dragging: id,\r\n      initX: initX,\r\n      initY: initY,\r\n      initModelX: model.x,\r\n      initModelY: model.y\r\n    });\r\n    this.props.select(model.ID);\r\n  }\r\n\r\n  render() {\r\n    // let's do all the layers from the model first\r\n    const modelElements = Object.entries(this.props.models).map(([key, model]) => {\r\n\r\n    \r\n      return <Group key={model.ID} handleDrag={this.handleDrag} model={model} selected={this.props.selected===model.ID}/>;\r\n    });\r\n    \r\n    // this part handles rendering the tentative line (if any)\r\n    let tentativeLine = null;\r\n    if (this.state.isNewline) {\r\n      const coords = modelCenter(this.props.models[this.state.id]);\r\n      tentativeLine = <Line tentative={true} selected={true} x1={coords.x} y1={coords.y} x2={this.state.x} y2={this.state.y}/>\r\n    }\r\n\r\n    // renders all the lines between models\r\n    const lines = Object.entries(this.props.models).map(([index, model]) => {\r\n      // no line if there is no connection\r\n      if (model.connectedTo === null) {\r\n        return null;\r\n      }\r\n      const otherModel = this.props.models[model.connectedTo];\r\n      const coords = modelCenter(model);\r\n      const otherCoords = modelCenter(otherModel);\r\n      const selected = this.state.selectedLineFromTo[0]===model.ID && this.state.selectedLineFromTo[1] === otherModel.ID;\r\n\r\n      return <Line key={index} tentative={false} selected={selected} x1={coords.x} y1={coords.y} x2={otherCoords.x} y2={otherCoords.y} onClick={() => this.handleLineClick(model.ID, otherModel.ID)}></Line>\r\n    })\r\n\r\n    \r\n    return (\r\n      // stick a rect for background\r\n      <svg onClick={this.handleBGClick} onMouseMove={this.trackMouse} onMouseUp={this.onMouseUp} id=\"canvas\" width=\"100%\" height=\"60%\" ref=\"canvas\">\r\n        <MarkerDefs/>\r\n        <rect width=\"100%\" height=\"100%\" fill=\"#b477ec\" pointerEvents=\"none\"/>\r\n        {modelElements}\r\n        {lines}\r\n        {tentativeLine}\r\n      </svg>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nfunction Padding(props) {\r\n  /* just padding to make the main canvas look better */\r\n  return (\r\n    <svg width=\"100%\" height=\"20%\">\r\n      <rect width=\"100%\" height=\"100%\" fill=\"blueviolet\"/>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport function CanvasContainer(props) {\r\n  /* contains the main section of the page yay */\r\n  return (\r\n    // padding on top and below to look extra good\r\n    <div className=\"p-2 flex-grow-1 canvas-container no-margin\"> \r\n      <Padding/>\r\n      <Canvas models={props.models} editableSelected={props.editableSelected} selected={props.selected} select={props.select} update={props.update} remove={props.remove}/>\r\n      <Padding/>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./Toolbar.css\";\r\nimport {nodeTypes} from \"./ModelInfo.js\";\r\n\r\nfunction DisplayLine(props) {\r\n  /* Returns a line of view-only parameter */\r\n  return (\r\n    <div className=\"parameter-line\">\r\n      <div className=\"parameter-name\">{props.name}:</div>\r\n      <div className=\"parameter-value\">{props.value}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass EditableLine extends React.Component {\r\n  /* a line of parameters that is editable */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.state = {\r\n      valueChanged: false,\r\n      currentValue: null,\r\n    };\r\n    // handles: \r\n    // onFocus -- reports to parent that editable is selected\r\n    // onChange -- updates and stores internal value\r\n    // onBlur -- callbacks to update the model and reset the internal state\r\n    this.onFocus = () => this.props.setEditableSelected(true);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onBlur = (value) => {\r\n      this.setState({\r\n        valueChanged: false,\r\n        currentValue: null,\r\n      });\r\n      this.props.setEditableSelected(false);\r\n      this.props.callback(this.props.paraName, value);\r\n    };\r\n  }\r\n\r\n  onChange(event) {\r\n    /* update the value of the parameter when changed */\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      valueChanged: true,\r\n      currentValue: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const oldValue = this.props.parameters[this.props.paraName];\r\n    // display oldValue if no value is changed\r\n    const value = (this.state.valueChanged ? this.state.currentValue : oldValue);\r\n\r\n    return (\r\n      <div className=\"parameter-line\">\r\n        <div className=\"parameter-name\">{this.props.name}</div>\r\n        <input className=\"parameter-input\" onFocus={this.onFocus} onBlur={() => this.onBlur(value)} onChange={this.onChange} value={value}></input>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nfunction DataInput(props) {\r\n  /* the line allowing setting of dataset */\r\n  return (\r\n    <div className=\"parameter-line\">\r\n      <div className=\"parameter-name\">Dataset</div>\r\n      <div className=\"parameter-input parameter-clickable\" onClick={props.setInputDataset}>{props.value}</div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Parameters(props) {\r\n  /* Returns a list of lines of editable parameters */\r\n  const model = props.model;\r\n  if (model === null) {\r\n    return null;\r\n  }\r\n\r\n  // differs depending on model type\r\n  switch (model.type) {\r\n    case \"dense\":\r\n      return (\r\n        <React.Fragment>\r\n          <EditableLine name=\"Units\" paraName=\"units\" setEditableSelected={props.setEditableSelected} parameters={model.parameters} callback={(n,v)=>props.callback(n,v,false)}/>\r\n        </React.Fragment>\r\n      );\r\n    case \"conv\":\r\n      return (\r\n        <React.Fragment>\r\n          <EditableLine name=\"Filters\" paraName=\"filters\" setEditableSelected={props.setEditableSelected} parameters={model.parameters} callback={(n,v)=>props.callback(n,v,false)}/>\r\n          <EditableLine name=\"Kernel Size\" paraName=\"kernelSize\" setEditableSelected={props.setEditableSelected} parameters={model.parameters} callback={(n,v)=>props.callback(n,v,true)}/>\r\n          <EditableLine name=\"Stride\" paraName=\"stride\" setEditableSelected={props.setEditableSelected} parameters={model.parameters} callback={(n,v)=>props.callback(n,v,true)}/>\r\n        </React.Fragment>\r\n      )\r\n    case \"input\":\r\n      return (\r\n        <React.Fragment>\r\n          <DataInput value={model.parameters.data} setInputDataset={props.setInputDataset}></DataInput>\r\n        </React.Fragment>\r\n      )\r\n    case \"maxpool\":\r\n      return (\r\n        <React.Fragment>\r\n          <EditableLine name=\"Pool Size\" paraName=\"poolSize\" setEditableSelected={props.setEditableSelected} parameters={model.parameters} callback={(n,v)=>props.callback(n,v,true)}/>\r\n        </React.Fragment>\r\n      )\r\n    case \"embedding\":\r\n      return (\r\n        <React.Fragment>\r\n          <EditableLine name=\"Units\" paraName=\"units\" setEditableSelected={props.setEditableSelected} parameters={model.parameters} callback={(n,v)=>props.callback(n,v,false)}/>\r\n        </React.Fragment>\r\n      )\r\n    case \"dropout\":\r\n      return (\r\n        <React.Fragment>\r\n          <EditableLine name=\"Rate\" paraName=\"rate\" setEditableSelected={props.setEditableSelected} parameters={model.parameters} callback={(n,v)=>props.callback(n,v,false,true)}/>\r\n        </React.Fragment>\r\n      )\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport function Toolbar(props) {\r\n  /* the master toolbar to the bottom */\r\n\r\n  // if no model is selected, show training information\r\n  if (props.selected === -1) {\r\n    const modelInfo = props.modelInfo;\r\n    const trainingInfo = props.trainingInfo;\r\n    const loss = (trainingInfo.loss === null) ? \"N/A\" : trainingInfo.loss;\r\n    const accuracy = (trainingInfo.accuracy === null) ? \"N/A\" : trainingInfo.accuracy;\r\n    const testAccuracy = (trainingInfo.testAccuracy === null) ? \"N/A\" : trainingInfo.testAccuracy;\r\n    const progress = (trainingInfo.progress === null) ? \"0.0%\" : trainingInfo.progress;\r\n    return (\r\n      <nav className=\"p-2 no-margin\" id=\"toolbar\">\r\n        <div id=\"toolbar-container\">\r\n          <div className=\"left-line\">\r\n            <p>Model Information</p>\r\n            <EditableLine name=\"Epochs\" paraName=\"epochs\" setEditableSelected={()=>null} parameters={modelInfo} callback={(n,v) => props.updateModelInfo(n,v,true)}/>\r\n            <EditableLine name=\"Batch Size\" paraName=\"batchSize\" setEditableSelected={()=>null} parameters={modelInfo} callback={(n,v) => props.updateModelInfo(n,v,true)}/>\r\n            <button onClick={props.trainSetup} className=\"btn btn-sm btn-light btn-block\">More</button>\r\n          </div>\r\n          <div className=\"blocker\"></div>\r\n          <div className=\"middle-line\">\r\n            <p>Train Information</p>\r\n            <DisplayLine name=\"Training\" value={trainingInfo.training ? \"Yes\" : \"No\"}/>\r\n            <DisplayLine name=\"Progress\" value={progress}/>\r\n          </div>\r\n          <div className=\"blocker\"></div>\r\n          <div className=\"right-line\">\r\n            <br></br>\r\n            <DisplayLine name=\"Accuracy\" value={accuracy}/>\r\n            <DisplayLine name=\"Loss\" value={loss}/>\r\n            <DisplayLine name=\"Test Acc\" value={testAccuracy}/>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  // if a model is selected...\r\n  // show the model's parameters page\r\n  const model = props.models[props.selected];\r\n\r\n  const type = nodeTypes[model.type].name;\r\n  const activation = (model.activation === null) ? \"None\" : nodeTypes[model.activation].name;\r\n  const incomingShape = (model.shapeIn === null ? \"N/A\" : String(model.shapeIn));\r\n  const outgoingShape = (model.shapeOut === null ? \"N/A\" : String(model.shapeOut));\r\n  return (\r\n    <nav className=\"p-2 no-margin\" id=\"toolbar\">\r\n      <div id=\"toolbar-container\">\r\n        \r\n        <div className=\"left-line\">\r\n          <p>Parameters</p>\r\n          <Parameters model={model} callback={props.update} setEditableSelected={props.setEditableSelected} setInputDataset = {props.setInputDataset}/>\r\n        </div>\r\n        <div className=\"blocker\"></div>\r\n        <div className=\"middle-line\">\r\n          <p>Layer Information</p>\r\n          <DisplayLine name=\"Type\" value={type}/>\r\n          <DisplayLine name=\"Activation\" value={activation}/>\r\n        </div>\r\n        <div className=\"blocker\"></div>\r\n        <div className=\"right-line\">\r\n          <br></br>\r\n          <DisplayLine name=\"Shape In\" value={incomingShape}/>\r\n          <DisplayLine name=\"Shape Out\" value={outgoingShape}/>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React from 'react';\r\nimport \"./ErrorBox.css\";\r\n\r\nexport function ErrorBox(props) {\r\n  /* Renders a dismissable error message */\r\n  // display nothing if no error message\r\n  if (props.errorMsg === null) {\r\n    return null;\r\n  }\r\n  if (props.dismissible) {\r\n    return (\r\n      <div className=\"position-absolute float-box\">\r\n        <div className=\"alert alert-danger alert-dismissible position-absolute w-100\">\r\n          <strong>Error:</strong> {props.errorMsg}\r\n          <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" \r\n                  onClick={() => props.setError(null, true)}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"position-absolute float-box\">\r\n      <div className=\"alert alert-danger position-absolute w-100\">\r\n        <strong>Error:</strong> {props.errorMsg}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport \"./SelectModel.css\";\r\n\r\nexport class SelectModel extends React.Component {\r\n  /* the page selecting a model */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.state = {\r\n      err: null,\r\n      link: null,\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.noChange = this.noChange.bind(this);\r\n    this.loadModel = this.loadModel.bind(this);\r\n    this.setError = this.setError.bind(this);\r\n  }\r\n\r\n  setError(err) {\r\n    /* set local error (to be displayed as small text) */\r\n    this.setState({err:err})\r\n  }\r\n\r\n  loadModel() {\r\n    /* load a custom model */\r\n    this.props.loadModel(this.state.link, this.setError);\r\n  }\r\n\r\n  onChange(e) {\r\n    /* when the textbox is editted */\r\n    this.setState({link:e.target.value});\r\n  }\r\n\r\n  noChange(e) {\r\n    /* the model selection is cancelled and nothing is done \r\n     * if the user clicks on the background\r\n     */\r\n    if (e.target.id === \"background-model-select\" || e.target.id === \"model-blocker\") {\r\n      this.props.toggle();\r\n    }\r\n  }\r\n  render() {\r\n    // empty if not displaying\r\n    if (!this.props.display) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div id=\"background-model-select\" onClick={this.noChange} className=\"select-model-container\">\r\n        <h1>Load a Model</h1>\r\n        <div className=\"model-container\">\r\n          <div className=\"model-new\">\r\n            <h2>New Model</h2>\r\n            <div className=\"d-flex flex-wrap p-2\">\r\n              <div className=\"p-2\"><button type=\"button\" onClick={() => this.props.loadDefaultModel(\"blank\")} className=\"btn btn-secondary\">Blank</button></div>\r\n              <div className=\"p-2\"><button type=\"button\" onClick={() => this.props.loadDefaultModel(\"dense\")} className=\"btn btn-secondary\">Dense</button></div>\r\n              <div className=\"p-2\"><button type=\"button\" onClick={() => this.props.loadDefaultModel(\"conv\")} className=\"btn btn-secondary\">Conv</button></div>\r\n            </div>\r\n            \r\n          </div>\r\n          <div id=\"model-blocker\" className=\"model-blocker\"></div>\r\n          <div className=\"model-load\">\r\n            <h2>Load Model</h2>\r\n            <label>Model link</label>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter model link\" onChange={this.onChange}></input>\r\n            <small className=\"form-text text-muted\">{this.state.err}</small>\r\n            <br></br>\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={this.loadModel}>Load</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}","import React from 'react';\r\nimport \"./LinkPage.css\";\r\n\r\nexport function LinkPage(props) {\r\n  /* the page showing a link is generated */\r\n  if (!props.display) {\r\n    return null;\r\n  }\r\n  // some code to copy the link to clipboard\r\n  // create a dummy element with the link as text\r\n  // select it and copy the text\r\n  var dummy = document.createElement(\"textarea\");\r\n  document.body.appendChild(dummy);\r\n  dummy.value = props.link;\r\n  dummy.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(dummy);\r\n  return (\r\n    <div onClick={e=>{\r\n      if (e.target.id === \"linkpage-container\" || e.target.id === \"linkpage-content\") {\r\n        props.toggle();\r\n      }\r\n    }} className=\"linkpage-container\" id=\"linkpage-container\">\r\n      <div className=\"linkpage-content\" id=\"linkpage-content\">\r\n      <h1>Model Link</h1>\r\n      <input readOnly className=\"form-control\" type=\"text\" value={props.link}/>\r\n      <small className=\"form-text text-muted\">{\"Link copied to clipboard\"}</small>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}","import React from 'react';\r\nimport \"./SetInput.css\";\r\n\r\nexport class SetInput extends React.Component {\r\n  /* the page to select an input dataset */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.state = {\r\n      err: null, // internal error\r\n      name: \"\", // name of dataset\r\n      link: \"\", // link to dataset\r\n      inputShape: [], // user-specified shape\r\n      outputShape: [],\r\n      inputShapeDisplay: \"\", // texts to display the corresponding shapes\r\n      outputShapeDisplay: \"\",\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.noChange = this.noChange.bind(this);\r\n    this.setError = this.setError.bind(this);\r\n    this.onChangeShapeInput = this.onChangeShapeInput.bind(this);\r\n    this.onChangeShapeOutput = this.onChangeShapeOutput.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onBlurInput = this.onBlurInput.bind(this);\r\n    this.onBlurOutput = this.onBlurOutput.bind(this);\r\n  }\r\n\r\n  setError(err) {\r\n    /* set internal error */\r\n    this.setState({err:err})\r\n  }\r\n\r\n  onChange(e) {\r\n    /* update the link's text */\r\n    this.setState({link:e.target.value});\r\n  }\r\n\r\n  breakShape(value) {\r\n    /* helper function to break down a string describing an array\r\n     * into an actual array\r\n     */\r\n    let components = String(value).split(\",\");\r\n\r\n    // do not accept empty inputs\r\n    if (components.length === 0) {\r\n      return [];\r\n    }\r\n    for (var i = 0; i < components.length; i++) {\r\n      const num = parseInt(components[i]);\r\n      // do not update if any member of tuple is not a number\r\n      if (isNaN(num)) {\r\n        return null;\r\n      }\r\n      components[i] = num;\r\n    }\r\n    return components;\r\n  }\r\n\r\n  toString(shape) {\r\n    /* convert an array into its string representation */\r\n    if (shape.length === 0) {\r\n      return \"\";\r\n    }\r\n    return shape.join(\",\");\r\n  }\r\n\r\n  onChangeShapeInput(e) {\r\n    /* change the input shape's display (its string) */\r\n    this.setState({\r\n      inputShapeDisplay: e.target.value,\r\n    })\r\n  }\r\n\r\n  onBlurInput(e) {\r\n    /* update the input shape to reflect the user input \r\n     * (stored in inputShapeDisplay), rejecting it if\r\n     * malformed\r\n     */\r\n\r\n    const components = this.breakShape(e.target.value);\r\n    // reject the shape if malformed\r\n    if (components === null) {\r\n      this.setState({\r\n        inputShapeDisplay: this.toString(this.state.inputShape),\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      inputShape: components,\r\n      inputShapeDisplay: this.toString(components)\r\n    });\r\n  }\r\n\r\n  onChangeShapeOutput(e) {\r\n    /* change the output shape's display (its string) */\r\n    this.setState({\r\n      outputShapeDisplay: e.target.value,\r\n    });\r\n  }\r\n\r\n  onBlurOutput(e) {\r\n    /* update the output shape to reflect the user output \r\n     * (stored in outputShapeDisplay), rejecting it if\r\n     * malformed\r\n     */\r\n    const components = this.breakShape(e.target.value);\r\n    // reject the shape if malformed\r\n    if (components === null) {\r\n      this.setState({\r\n        outputShapeDisplay: this.toString(this.state.outputShape),\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      outputShape: components,\r\n      outputShapeDisplay: this.toString(components),\r\n    });\r\n  }\r\n  \r\n  onChangeName(e) {\r\n    /* update the name of the dataset */\r\n    this.setState({\r\n      name: e.target.value,\r\n    })\r\n  }\r\n\r\n  noChange(e) {\r\n    /* cancel this page without any changes if background is clicked */\r\n    if (e.target.id === \"background-input-set\" || e.target.id === \"input-blocker\") {\r\n      this.props.toggle();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.display) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div id=\"background-input-set\" onClick={this.noChange} className=\"set-input-container\">\r\n      <h1>Load Input Dataset</h1>\r\n      <div className=\"input-container\">\r\n        <div className=\"input-preset\">\r\n          <h2>Load Preset</h2>\r\n          <div className=\"d-flex flex-wrap p-2\">\r\n            <div className=\"p-2\"><button type=\"button\" onClick={() => this.props.loadDefaultInput(\"MNIST\")} className=\"btn btn-secondary\">MNIST</button></div>\r\n            <div className=\"p-2\"><button type=\"button\" onClick={() => this.props.loadDefaultInput(\"IMDB\")} className=\"btn btn-secondary\">IMDB</button></div>\r\n          </div>\r\n          \r\n        </div>\r\n        <div id=\"input-blocker\" className=\"input-blocker\"></div>\r\n        <div className=\"input-load\">\r\n          <h2>Load Custom Dataset</h2>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Enter input URL\" onChange={this.onChange} value={this.state.link}></input>\r\n          </div>\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Name\" onChange={this.onChangeName} value={this.state.name}></input>\r\n          <small className=\"form-text\">Shape does not include batchSize</small>\r\n          <div className=\"form-row\">\r\n            \r\n            <div className=\"col\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Input shape\" onChange={this.onChangeShapeInput} onBlur={this.onBlurInput} value={this.state.inputShapeDisplay}></input>\r\n            </div>\r\n            <div className=\"col\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Output shape\" onChange={this.onChangeShapeOutput} onBlur={this.onBlurOutput} value={this.state.outputShapeDisplay}></input>\r\n            </div>\r\n          </div>         \r\n          \r\n          <small className=\"form-text text-muted\">{this.state.err}</small> \r\n          <br></br>\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={()=>this.props.loadInput(this.state.link, this.state.name, this.state.inputShape, this.state.outputShape, this.setError)}>Load</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}","export function isCyclic(models) {\r\n  /* Checks if the models constitute directed acyclic graphs\r\n   * (Potentially multiple acyclic graphs)\r\n   * Returns false only if there is an internal loop\r\n   */\r\n  let visited = {}; // whether the node is visited\r\n  let inRecursionStack = {}; // whether the node is in the currentfunction call stack\r\n\r\n  for (const key of Object.keys(models)) {\r\n    visited[key] = false;\r\n    inRecursionStack[key] = false;\r\n  }\r\n\r\n  for (const key of Object.keys(models)) {\r\n    if (isCyclicHelper(models, key, visited, inRecursionStack)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isCyclicHelper(models, index, visited, inRecursionStack) {\r\n  /* A helper function to explore from a single node. Returns\r\n   * false if there is no discrepancy found from this index \r\n   */\r\n\r\n  // if visited, remove out of stack and say no\r\n  if (visited[index]) {\r\n    inRecursionStack[index] = false;\r\n    return false;\r\n  }\r\n\r\n  visited[index] = true;\r\n  inRecursionStack[index] = true;\r\n  // if no neighbor, then no discrepancy\r\n  if (models[index].connectedTo === null) {\r\n    inRecursionStack[index] = false; \r\n    return false;\r\n  }\r\n\r\n  const next = models[index].connectedTo;\r\n  if (!visited[next] && isCyclicHelper(models, next, visited, inRecursionStack)) {\r\n    return true;\r\n  }\r\n  // if we bump into a node on our incoming path, it's bad\r\n  if (inRecursionStack[next]) {\r\n    return true;\r\n  }\r\n\r\n  inRecursionStack[index] = false;\r\n  return false;\r\n}\r\n\r\nexport function isLinear(models) {\r\n  /* checks if the model current makes sense:\r\n   * all nodes cannot have > 1 incoming edge\r\n   * input node cannot have incoming edge\r\n   * output node cannot have outgoing edge\r\n   */ \r\n  let numIncomingEdges = {};\r\n  for (const key of Object.keys(models)) {\r\n    numIncomingEdges[key] = 0;\r\n  }\r\n\r\n  for (const key of Object.keys(models)) {\r\n    const next = models[key].connectedTo;\r\n    if (next !== null) {\r\n      numIncomingEdges[next] += 1;\r\n    }\r\n  }\r\n\r\n  // the input node must not have incoming edges\r\n  if (numIncomingEdges[0] !== 0) {\r\n    return {ok: false, err: \"Input node cannot have incoming edge\"};\r\n  }\r\n  // the output node must not have outgoing edges\r\n  if (models[1].connectedTo !== null) {\r\n    return {ok: false, err: \"Output node cannot have outgoing edge\"}; \r\n  }\r\n  for (const key of Object.keys(models)) {\r\n    if (numIncomingEdges[key] > 1) {\r\n      return {\"ok\": false, err:\"No node can have more than one incoming edge\"};\r\n    }\r\n  }\r\n  return {\"ok\": true, err:\"\"};\r\n}\r\n\r\nexport function prev(models, id) {\r\n  /* Returns id of the node linking to the model pointed \r\n   * to by the id, if any; if none, return null \r\n   */\r\n  for (const key of Object.keys(models)) {\r\n    if (models[key].connectedTo === id) {\r\n      return key;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function isTrainable(models) {\r\n  /* Is the current architecture trainable? */\r\n  const resp = isLinear(models);\r\n  // if not linear, then fail\r\n  if (!resp[\"ok\"]) {\r\n    return resp;\r\n  }\r\n  if (isCyclic(models)) {\r\n    return {ok: false, err: \"Model cannot be cyclic\"};\r\n  }\r\n  \r\n  // output node must not be empty, \r\n  // have ndim = 2, and agree with batch size\r\n  if (models[1].shapeIn === null || models[1].shapeOut.length !== 2) {\r\n    return {ok: false, err: \"Output node must have shape (batchSize, categories)\"};\r\n  }\r\n\r\n  let currentNode = models[0]; // input node\r\n  while (currentNode.ID !== 1) { // need to reach output node\r\n    if (currentNode.connectedTo === null) {\r\n      return {ok: false, err: \"Model does not connect from input node to output node\"};\r\n    }\r\n    currentNode = models[currentNode.connectedTo];\r\n  }\r\n  return {ok: true, err: \"\"};\r\n}","import {BASE_URL} from \"./Constants.js\";\r\n\r\n// functions to communicate with the server\r\n\r\nexport function getModel(modelID) {\r\n  /* get a model given its id from the server */\r\n  return fetch(BASE_URL+\"Architecture?id=\"+modelID).then(response => { \r\n    if (response.status === 200 || response.status === 404 || response.status === 400) {\r\n      return response.json();\r\n    }\r\n    throw new Error(\"Something went wrong when getting model\");\r\n  }).then(json => {\r\n    if ('message' in json) {\r\n      throw new Error(json['message']);\r\n    }\r\n    return json.data['modelJSON'];\r\n  })\r\n}\r\n\r\nexport function saveModel(serializedModel) {\r\n  /* save the serialized model to the server and returns its id */\r\n  return fetch(BASE_URL+'Architecture', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: serializedModel,\r\n  }).then(response => {\r\n    if (response.status === 201) {\r\n      return response.json();\r\n    } else {\r\n      throw new Error(\"Something went wrong\");\r\n    }\r\n  })\r\n}\r\n\r\nexport function startSession(id) {\r\n  /* start a new training session given the model id */\r\n  return fetch(BASE_URL+\"Train\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({id:id}),\r\n  }).then(response => {\r\n    if (response.status === 201) {\r\n      return response.json();\r\n    }\r\n    throw new Error(\"Internal error\");\r\n  });\r\n}\r\n\r\nexport function updateTrain(sessionID) {\r\n  /* get the latest training status of a training session */\r\n  return fetch(BASE_URL+\"Train?id=\"+sessionID).then(response => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    }\r\n    throw new Error(\"Training session failed to be fetched\");\r\n  })\r\n}\r\n\r\nexport function deleteTrain(sessionID) {\r\n  /* delete the training session given its session id */\r\n  return fetch(BASE_URL+\"Train\", {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({id:sessionID}),\r\n  });\r\n}\r\n\r\nexport function generateLink(id) {\r\n  /* generate a link for a saved model at the server */\r\n  return fetch(BASE_URL+\"Link\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({modelID: id})\r\n  }).then(response => {\r\n    if (response.status === 201) {\r\n      return response.json();\r\n    }\r\n    throw new Error(\"Failed to generate link\");\r\n  })\r\n}\r\n\r\nexport function getIDFromLink(link) {\r\n  /* get the corresponding model ID from the link */\r\n  return fetch(BASE_URL+\"Link?link=\"+link).then(response => {\r\n    if (response.status === 200 || response.status === 404 || response.status === 400)\r\n      return response.json();\r\n    throw new Error(\"Something went wrong with retrieving ID from link\");\r\n  }).then(json => {\r\n    if ('message' in json) {\r\n      throw new Error(json['message']);\r\n    }\r\n    return json['id'];\r\n  })\r\n}\r\n\r\nexport function downloadModel(modelID) {\r\n  /* get the json download for the model from its model ID */\r\n  return fetch(BASE_URL+\"Download?id=\"+modelID).then(response => {\r\n    if (response.status === 200 || response.status === 404 || response.status === 400)\r\n      return response.json();\r\n    throw new Error(\"Something went wrong with downloading the model\");\r\n  }).then(json => {\r\n    if ('message' in json) {\r\n      throw new Error(json['message']);\r\n    }\r\n    return json['data'];\r\n  })\r\n}\r\n\r\nexport function loadInput(url, name, inputShape, outputShape) {\r\n  /* load the custom input from the server */\r\n  return fetch(BASE_URL+\"Dataset\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      link: url,\r\n      datasetName: name,\r\n      inputShape: String(inputShape),\r\n      outputShape: String(outputShape),\r\n    })\r\n  }).then(response => {\r\n    if (response.status === 201 || response.status === 404 || response.status === 400) \r\n      return response.json();\r\n    throw new Error(\"Something went wrong when loading the input\");\r\n  }).then(json => {\r\n    console.log(json);\r\n    if ('message' in json) {\r\n      throw new Error(json['message']);\r\n    }\r\n    return json['data'];\r\n  });\r\n}","import React from \"react\";\r\nimport \"./TrainSetup.css\";\r\n\r\nfunction Option(props) {\r\n  /* one option on the list, specially shown if selected */\r\n  const className = (props.selected === props.name) ? \"btn btn-info\" : \"btn btn-secondary\"\r\n  return (\r\n    <div className=\"p-2\">\r\n      <button type=\"button\" onClick={() => props.select(props.name)} className={className}>{props.displayName}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport class TrainSetup extends React.Component {\r\n  /* the page setting details of training configuration */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick(e) {\r\n    /* cancel this page if background is clicked */\r\n    if (e.target.id === \"background-input-set\") {\r\n      this.props.toggle();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.display) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div id=\"background-input-set\" className=\"set-input-container\" onClick={this.onClick}>\r\n      <h1>Setup Training Details</h1>\r\n      <div className=\"input-container\">\r\n        <div className=\"input-preset\">\r\n          <h2>Optimizer</h2>\r\n          <div>\r\n            Learning Rate: <input id=\"learning-rate\" type=\"number\" step=\"any\" value={this.props.modelInfo.learningRate} onChange={() => this.props.update(\"learningRate\", parseFloat(document.getElementById(\"learning-rate\").value))} min=\"0\"></input>\r\n          </div>\r\n          <div className=\"d-flex flex-wrap p-2\">\r\n            <Option name=\"adam\" displayName=\"Adam\" selected={this.props.modelInfo.optimizer} select={(v)=>this.props.update(\"optimizer\", v)}></Option>\r\n            <Option name=\"sgd\" displayName=\"SGD\" selected={this.props.modelInfo.optimizer} select={(v)=>this.props.update(\"optimizer\", v)}></Option>\r\n            <Option name=\"rmsProp\" displayName=\"RMS Prop\" selected={this.props.modelInfo.optimizer} select={(v)=>this.props.update(\"optimizer\", v)}></Option>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"input-blocker\" className=\"input-blocker\"></div>\r\n        <div className=\"input-load\">\r\n          <h2>Loss</h2>\r\n          <div className=\"d-flex flex-wrap p-2\">\r\n            <Option name=\"mse\" displayName=\"Mean Squared Error\" selected={this.props.modelInfo.loss} select={(v)=>this.props.update(\"loss\", v)}></Option>\r\n            <Option name=\"logcosh\" displayName=\"Log Cosh\" selected={this.props.modelInfo.loss} select={(v)=>this.props.update(\"loss\", v)}></Option>\r\n            <Option name=\"cce\" displayName=\"Categorical Crossentropy\" selected={this.props.modelInfo.loss} select={(v)=>this.props.update(\"loss\", v)}></Option>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      );\r\n    }\r\n}","import React from 'react';\r\nimport {Sidebar} from \"./Sidebar.js\";\r\nimport {CanvasContainer} from \"./Canvas.js\";\r\nimport {Toolbar} from \"./Toolbar.js\";\r\nimport {ErrorBox} from \"./ErrorBox.js\";\r\nimport {SelectModel} from \"./SelectModel.js\";\r\nimport {LinkPage} from \"./LinkPage.js\";\r\nimport {SetInput} from \"./SetInput.js\";\r\nimport {isCyclic, isLinear, isTrainable} from \"./Utils.js\";\r\nimport {nodeTypes, blankModel, denseModel, convModel} from \"./ModelInfo.js\";\r\nimport {getModel, saveModel, startSession, updateTrain, deleteTrain, generateLink, getIDFromLink, downloadModel, loadInput} from \"./Server.js\";\r\nimport {TrainSetup} from \"./TrainSetup.js\";\r\nimport {DATASET_SHAPE} from \"./Constants.js\";\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport './App.css';\r\n\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      models: { // represent the architecture\r\n        0: this._model(\"input\", 0, 20, 50),\r\n        1: this._model(\"output\", 1, 300, 50),\r\n      },\r\n      modelInfo: {\r\n        epochs: \"2\",\r\n        batchSize: \"25\",\r\n        maxToken: null,\r\n        loss: \"cce\", // loss function\r\n        optimizer: \"adam\",\r\n        learningRate: \"0.01\",\r\n      },\r\n      selected: 0, // selected node;\r\n      nextID: 2, // the ID for the next new layer; incremented as model grows\r\n      errorMsg: null, // error message\r\n      errorOnce: false, // whether the current error message can be cancelled \r\n      trainingInfo: {\r\n        accuracy: null,\r\n        testAccuracy: null,\r\n        loss: null,\r\n        progress: null,\r\n        training: false, // whether the model is being trained on cloud\r\n      },\r\n      modelID: null, // ID of the model\r\n      sessionID: null, // ID of the training session\r\n      intervalID: null, // ID of the interval to be set\r\n      editableSelected: false, // whether an editable element of the toolbar is selected\r\n      selectModelPage: true, // is it in the page selecting model or main page\r\n      linkPage: false, // is link page on display\r\n      link: null, // the link for the current model\r\n      settingInput: false, // are we on a page to set input?\r\n      trainSetup: false, // are we customizing training information?\r\n    };\r\n\r\n    // function bindings\r\n    this.newModel = this.newModel.bind(this);\r\n    this.updateModel = this.updateModel.bind(this);\r\n    this.selectModel = this.selectModel.bind(this);\r\n    this.removeModel = this.removeModel.bind(this);\r\n\r\n    this.setEditableSelected = this.setEditableSelected.bind(this);\r\n    this.updateModelInfo = this.updateModelInfo.bind(this);\r\n    this.setError = this.setError.bind(this);\r\n\r\n    this.trainCloud = this.trainCloud.bind(this);    \r\n    this.startSession = this.startSession.bind(this);\r\n    this.updateTrain = this.updateTrain.bind(this);\r\n    this.cancelTrain = this.cancelTrain.bind(this);\r\n    this.state[\"models\"] = this._updateDependents(this.state.models);\r\n\r\n    this.loadDefaultModel = this.loadDefaultModel.bind(this);\r\n    this.loadModel = this.loadModel.bind(this);\r\n    this.downloadModel = this.downloadModel.bind(this);\r\n\r\n    this.getLink = this.getLink.bind(this);\r\n    this.setInput = this.setInput.bind(this);\r\n    this.loadDefaultInput = this.loadDefaultInput.bind(this);\r\n    this.loadCustomInput = this.loadCustomInput.bind(this);\r\n\r\n    this.trainSetup = this.trainSetup.bind(this);\r\n  }\r\n\r\n  _model(type, id, x, y) {\r\n    /* Helper function to make a new model (for a layer) given id and its position\r\n     */\r\n    return {\r\n      name: type + String(id),\r\n      ID: id,\r\n      type: type,\r\n      x: x,\r\n      y: y,\r\n      connectedTo: null,\r\n      shapeIn: null, // dependent\r\n      shapeOut: null, // dependent\r\n      activation: null,\r\n      parameters: cloneDeep(nodeTypes[type].defaultParameters),\r\n    };\r\n  }\r\n\r\n  model(type) {\r\n    /* Function to make a new model given its layer type, putting\r\n     * it in a random location on the upper left corner of the canvas\r\n     */\r\n    return this._model(type, this.state.nextID, 10 + Math.random() * 80, 10 + Math.random() * 80);\r\n  }\r\n  updateDependents(models) {\r\n    /* Given the current models, return models with the dependents\r\n     * (parameters updated given the independent variables) updated\r\n     * also reset the error (and may set some new ones given what happens in\r\n     * updating dependents)\r\n     */\r\n    this.setError(null, false);\r\n    return this._updateDependents(models);\r\n  }\r\n  _updateDependents(models) {\r\n    /* helper function to update members of nodes\r\n     * that depend on other parts of the system \r\n     */\r\n    // get the input model\r\n    let inputNode = models[0];\r\n    inputNode.shapeOut = nodeTypes[inputNode.type].shapeOut(inputNode.parameters, this.state.modelInfo, this.setError);\r\n    inputNode.shapeIn = inputNode.shapeOut;\r\n    let currentNode = inputNode;\r\n    let nextNode = models[inputNode.connectedTo];\r\n    while (currentNode.connectedTo !== null) {\r\n      nextNode.shapeIn = currentNode.shapeOut;\r\n      if (nextNode.type === \"input\") {\r\n        nextNode.shapeOut = nodeTypes[nextNode.type].shapeOut(nextNode.parameters, this.state.modelInfo, this.setError);\r\n      } else {\r\n        nextNode.shapeOut = nodeTypes[nextNode.type].shapeOut(nextNode.parameters, nextNode.shapeIn, this.setError);\r\n      }\r\n      \r\n      currentNode = nextNode;\r\n      nextNode = models[nextNode.connectedTo];\r\n    }\r\n    return models;\r\n  }\r\n\r\n  newModel(type) {\r\n    const oldModels = {...this.state.models};\r\n    let newModels = {...oldModels, [this.state.nextID]: this.model(type)};\r\n    newModels = this.updateDependents(newModels);\r\n    this.setState({\r\n      models: newModels,\r\n      nextID: this.state.nextID + 1,\r\n    });\r\n  }\r\n\r\n  selectModel(id) {\r\n    this.setState({\r\n      selected: id,\r\n    })\r\n  }\r\n\r\n  updateModel(id, dict) {\r\n    /* given a dict of properties to update ((name, value) pairs)\r\n     * updates the model of the given id\r\n     */\r\n    let models = {...this.state.models};\r\n    for (const key of Object.keys(dict)) {\r\n      models[id][key] = dict[key];\r\n    }\r\n    if (isCyclic(models)) {\r\n      this.setError(\"Graph cannot have loops\", false);\r\n      return;\r\n    } else if (!isLinear(models)[\"ok\"]) {\r\n      this.setError(isLinear(models)[\"err\"], false);\r\n      return;\r\n    } else {\r\n      this.setError(null, false)\r\n    }\r\n\r\n    models = this.updateDependents(models);\r\n    this.setState({\r\n      models: models,\r\n    });\r\n    \r\n  }\r\n\r\n  removeModel(id) {\r\n    /* given an id, removes the corresponding model\r\n     * and all connections to it\r\n     */\r\n\r\n    // get filtered models\r\n    let newModels = {};\r\n    for (const key of Object.keys(this.state.models)) {\r\n      if (this.state.models[key].ID !== id) {\r\n        newModels[key] = this.state.models[key];\r\n      }\r\n    }\r\n\r\n    for (const key of Object.keys(newModels)) {\r\n      if (newModels[key].connectedTo === id) {\r\n        newModels[key].connectedTo = null;\r\n      }\r\n    }\r\n\r\n    newModels = this.updateDependents(newModels);\r\n    this.setState({\r\n      models: newModels,\r\n    });\r\n  }\r\n\r\n  updateParameters(id, name, value, canTuple, floatOkay=false) {\r\n    /* given a name and a value\r\n     * updates the parameters of the model of the given id\r\n     */\r\n    // copy the model\r\n    const model = {...this.state.models[id]};\r\n\r\n    // now, important: check to ensure value is integer or tuple or integer\r\n    let components = String(value).split(\",\");\r\n\r\n    // do not accept empty inputs\r\n    if (components.length === 0) {\r\n      return;\r\n    }\r\n    for (var i = 0; i < components.length; i++) {\r\n      const num = floatOkay ? parseFloat(components[i]) : parseInt(components[i]);\r\n      // do not update if any member of tuple is not a number\r\n      if (isNaN(num)) {\r\n        return;\r\n      }\r\n      components[i] = num;\r\n    }\r\n    // if tuple, set array\r\n    if (components.length > 1) {\r\n      // no tuples for things that can't tuple\r\n      if (!canTuple) {\r\n        return;\r\n      }\r\n      model[\"parameters\"][name] = components;\r\n    } else {\r\n      model[\"parameters\"][name] = components[0];\r\n    }\r\n    let models = {...this.state.models}; // make a copy\r\n    \r\n    models[id] = model;\r\n    models = this.updateDependents(models);\r\n    this.setState({\r\n      models: models,\r\n    });\r\n  }\r\n\r\n  updateModelInfo(name, value, intOnly=false) {\r\n    /* update a key value pair of a model\r\n     * if intOnly is true, then the value must be an\r\n     * integer, or else it is rejected\r\n     */\r\n    \r\n    // reject non-ints\r\n    if (intOnly) {\r\n      if (isNaN(value) || value === \"\") {\r\n        return;\r\n      }\r\n    }\r\n    let modelInfo = this.state.modelInfo\r\n    modelInfo[name] = value;\r\n    this.setState({\r\n      modelInfo: modelInfo,\r\n    });\r\n  }\r\n\r\n  setError(err, once) {\r\n    /* sets the error message */\r\n    if (once) {\r\n      this.setState({\r\n        errorMsg: err,\r\n        errorOnce: once,\r\n      });\r\n    } else {\r\n      // do not override one-time messages\r\n      if (this.state.errorOnce && this.state.errorMsg !== null) {\r\n        return;\r\n      } else {\r\n        this.setState({\r\n          errorMsg: err,\r\n          errorOnce: once,\r\n        });\r\n      }\r\n    }\r\n    \r\n  }\r\n  \r\n  setEditableSelected(t) {\r\n    /* set whether an editable model is selected */\r\n    this.setState({\r\n      editableSelected: t,\r\n    });\r\n  }\r\n\r\n  trainCloud() {\r\n    /* train the model on cloud, if the model is \r\n     * well-formed\r\n     */\r\n\r\n    // first check if the model is linear\r\n    const models = this.updateDependents(this.state.models);\r\n    this.setState({\r\n      models: models,\r\n    })\r\n\r\n    // then we check if the model is well-formed\r\n    const resp = isTrainable(models);\r\n    if (!resp[\"ok\"]) {\r\n      this.setError(resp[\"err\"], true);\r\n      return;\r\n    }\r\n\r\n    // serialize model and save it to the database first\r\n    const serializedModel = JSON.stringify({\r\n      modelJSON: JSON.stringify({model: models, modelInfo: this.state.modelInfo}),\r\n    });\r\n    \r\n    saveModel(serializedModel).then((responseJSON) => {\r\n      let info = this.state.trainingInfo;\r\n      info[\"training\"] = true;\r\n      this.setState({trainingInfo:info, modelID: responseJSON['data'][\"id\"]});\r\n      this.selectModel(-1); // deselect any model to show training progress\r\n      // after it is saved, start a training session\r\n      this.startSession(responseJSON['data'][\"id\"]);\r\n    }).catch(e => {\r\n      this.setError(e.message, true);\r\n    });\r\n  }\r\n\r\n  startSession(id) {\r\n    /* start training session */\r\n    startSession(id).then(responseJSON => {\r\n      const data = responseJSON['data'];\r\n      // periodically retrieve latest training info\r\n      const intervalID = setInterval(this.updateTrain, 100);\r\n\r\n      // set the retrieved session id\r\n      this.setState({\r\n        sessionID: data['sessionID'],\r\n        intervalID: intervalID,\r\n      });\r\n    }).catch(e => {\r\n      this.setError(e.message, true);\r\n    });\r\n  }\r\n\r\n  updateTrain() {\r\n    /* update the information about the current training session */\r\n    updateTrain(this.state.sessionID).then(data => {\r\n      const trainingInfo = {\r\n        accuracy: String(Math.floor(data['accuracy']*100))+\"%\",\r\n        testAccuracy: String(Math.floor(data['test_accuracy']*100))+\"%\",\r\n        loss: Number(parseFloat(data['loss']).toFixed(3)),\r\n        progress: String(Math.floor(data['progress']*100))+\"%\",\r\n        training: !data['trained'], // whether the model is being trained on cloud\r\n      }\r\n      this.setState({trainingInfo: trainingInfo});\r\n      // stop updating if training is done\r\n      if (data['trained']) {\r\n        clearInterval(this.state.intervalID);\r\n      }\r\n    }).catch(e => {\r\n      this.setError(e.message, true);\r\n      this.cancelTrain();\r\n    });\r\n  }\r\n\r\n  cancelTrain() {\r\n    /* cancel the training session */\r\n    clearInterval(this.state.intervalID);\r\n    let trainingInfo = this.state.trainingInfo;\r\n    trainingInfo['training'] = false;\r\n    this.setState({trainingInfo:trainingInfo});\r\n    deleteTrain(this.state.sessionID);\r\n  }\r\n\r\n  loadModel(link, setError) {\r\n    /* load a stored model from a model's link */\r\n\r\n    // get model ID\r\n    getIDFromLink(link).then(modelID => {\r\n      // then get the model itself given the ID\r\n      getModel(modelID).then(modelJSON => {\r\n        const decoded = JSON.parse(modelJSON);\r\n        let modelInfo = this.state.modelInfo;\r\n        modelInfo['epochs'] = decoded['epochs'];\r\n        this.setState({\r\n          modelInfo: modelInfo,\r\n          models: decoded['model'],\r\n          // find the largest index\r\n          nextID: Math.max(...Object.keys(decoded['model']).map(key => Number(key)))+1,\r\n          selectModelPage: false,\r\n        });\r\n        setError(null);\r\n      }).catch(err => {\r\n        setError(err.message);\r\n      })\r\n    }).catch(err => {\r\n      setError(err.message);\r\n    });\r\n  }\r\n\r\n  loadDefaultModel(name) {\r\n    /* load one of the preset default models */\r\n    let model = null;\r\n    switch (name) {\r\n      case \"blank\":\r\n        model = blankModel;\r\n        break;\r\n      case \"dense\":\r\n        model = denseModel;\r\n        break;\r\n      case \"conv\":\r\n        model = convModel;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    this.setState({\r\n      nextID: Math.max(...Object.keys(model).map(key => Number(key)))+1,\r\n      models: model['model'],\r\n      modelInfo: model['info'],\r\n      selectModelPage: false,\r\n    });\r\n\r\n  }\r\n\r\n  getLink() {\r\n    /* get a link for the current model */\r\n    const models = this.updateDependents(this.state.models);\r\n    this.setState({\r\n      models: models,\r\n    })\r\n    const serializedModel = JSON.stringify({\r\n      modelJSON: JSON.stringify({model: models, modelInfo: this.state.modelInfo}),\r\n    });\r\n    \r\n    // save the model first then get a link\r\n    saveModel(serializedModel).then(responseJSON => {\r\n      generateLink(responseJSON[\"data\"][\"id\"]).then( responseJSON => {\r\n        const link = responseJSON['data']['link'];\r\n        this.setState({\r\n          link: link,\r\n          linkPage: true,\r\n        });\r\n      }).catch(err => {\r\n        this.setError(err.message, true);\r\n      });\r\n    }).catch(err => {\r\n      this.setError(err.message, true);\r\n    });\r\n    \r\n  }\r\n\r\n  downloadModel() {\r\n    /* download the current model */\r\n\r\n    // first update dependent to make sure things are right\r\n    const models = this.updateDependents(this.state.models);\r\n    this.setState({\r\n      models: models,\r\n    })\r\n\r\n    // check if model is well-formed\r\n    const resp = isTrainable(models);\r\n    if (!resp[\"ok\"]) {\r\n      this.setError(resp[\"err\"], true);\r\n      return;\r\n    }\r\n\r\n    // save the model, then download it\r\n    const serializedModel = JSON.stringify({\r\n      modelJSON: JSON.stringify({model: models, modelInfo: this.state.modelInfo}),\r\n    });\r\n    saveModel(serializedModel).then((responseJSON) => {\r\n      const modelID = responseJSON['data'][\"id\"];\r\n      downloadModel(modelID).then(data => {\r\n        // create a temporary anchor element and click it\r\n        // to download this file\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([data], {type: 'text/json'});\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"model_architecture.json\";\r\n        element.click();\r\n      }).catch(e => {\r\n        this.setError(e.message, true);\r\n      })\r\n    }).catch(e => {\r\n      this.setError(e.message, true);\r\n    });\r\n  }\r\n\r\n  loadDefaultInput(name) {\r\n    /* load an input dataset that is preset */\r\n    \r\n    let models = this.state.models;\r\n    // set the parameters of the current model\r\n    models[0]['parameters']['data'] = name;\r\n    models[0]['parameters']['inputShape'] = DATASET_SHAPE[name].input;\r\n    models[1]['parameters']['outputShape'] = DATASET_SHAPE[name].output;\r\n\r\n    let modelInfo = this.state.modelInfo;\r\n    if (name === \"IMDB\")\r\n      modelInfo['maxToken'] = 1000;\r\n    this.setState({\r\n      // update dependent to make shapes correct\r\n      models: this.updateDependents(models), \r\n      settingInput: false,\r\n      modelInfo: modelInfo,\r\n    });\r\n  }\r\n\r\n  loadCustomInput(url, name, inputShape, outputShape, setError) {\r\n    /* load a user custom input set */\r\n\r\n    // make sure all the inputs are reasonable\r\n    if (inputShape.length === 0 || outputShape.length === 0) {\r\n      setError(\"Input and output shapes must be set\");\r\n      return;\r\n    }\r\n    if (name === null) {\r\n      setError(\"Name your dataset!\");\r\n      return;\r\n    }\r\n\r\n    // load the input from server\r\n    loadInput(url, name, inputShape, outputShape).catch(e => {\r\n      setError(e.message);\r\n      return;\r\n    }).then(data => {\r\n      let models = this.state.models;\r\n      // store them into the current model\r\n      models[0].parameters['data'] = data.datasetName;\r\n      models[0].parameters['inputShape'] = JSON.parse(data.inputShape);\r\n      models[0].parameters['datasetID'] = data.datasetID;\r\n      models[1].parameters['data'] = data.datasetName;\r\n      models[1].parameters['outputShape'] = JSON.parse(data.outputShape);\r\n      // keep shapes correct\r\n      models = this.updateDependents(models);\r\n\r\n      this.setState({\r\n        models: models,\r\n        settingInput: false,\r\n      });\r\n      console.log(models);\r\n    });\r\n  }\r\n\r\n  setInput() {\r\n    /* bring up the setting input page */\r\n    this.setState({\r\n      settingInput: true,\r\n    });\r\n  }\r\n\r\n  trainSetup() {\r\n    /* bring up the train setup page */\r\n    this.setState({\r\n      trainSetup: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <LinkPage display={this.state.linkPage} link={this.state.link} toggle={()=>this.setState({linkPage: false})}/>\r\n        <SelectModel display={this.state.selectModelPage} loadModel={this.loadModel} loadDefaultModel={this.loadDefaultModel} toggle={()=>this.setState({selectModelPage: false})}></SelectModel>\r\n        <SetInput display={this.state.settingInput} loadDefaultInput={this.loadDefaultInput} loadInput={this.loadCustomInput} toggle={()=>{this.setState({settingInput: false})}}></SetInput>\r\n        <TrainSetup display={this.state.trainSetup} toggle={()=>this.setState({trainSetup: false})} modelInfo={this.state.modelInfo} update={this.updateModelInfo}></TrainSetup>\r\n        <ErrorBox errorMsg={this.state.errorMsg} dismissible={this.state.errorOnce} setError={this.setError}/>\r\n        <div className=\"container-fluid d-flex h-100 flex-row no-margin\">\r\n          <Sidebar models={this.state.models} selected={this.state.selected} trainingInfo={this.state.trainingInfo} newModel={this.newModel} setError={this.setError} update={this.updateModel} setSelectModelPage={() => this.setState({selectModelPage:true})} trainCloud={this.trainCloud} cancelTrain={this.cancelTrain} getLink={this.getLink} downloadModel={this.downloadModel} setInput={this.setInput}/>\r\n          <div className=\"d-flex w-100 p-2 flex-column flex-grow-1 no-margin\" ref=\"canvasContainer\">\r\n            <CanvasContainer models={this.state.models} selected={this.state.selected} select={this.selectModel} update={this.updateModel} remove={this.removeModel} editableSelected={this.state.editableSelected}/>\r\n            <Toolbar trainSetup={this.trainSetup} modelInfo={this.state.modelInfo} setInputDataset={this.setInput} trainingInfo={this.state.trainingInfo} updateModelInfo={this.updateModelInfo} selected={this.state.selected} models={this.state.models} update={(name, value, canTuple, floatOkay=false) => this.updateParameters(this.state.selected, name, value, canTuple, floatOkay)} setEditableSelected={this.setEditableSelected}/>\r\n          </div>\r\n          \r\n        </div>\r\n      </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./index.css\";\r\n\r\n// the main page being loaded here: entry point\r\n// for the app\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}